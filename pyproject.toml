[project]
name = "github"
version = "0.1.0"
authors = [{ name = "Dribia Data Research", email = "code@dribia.com"}]
description = "GitHub configurations for Dribia organization."
readme = "README.md"
requires-python = ">=3.13,<3.14"
dependencies = []

[project.urls]
Repository = "https://github.com/dribia/github-config"

[dependency-groups]
dev = [
    "pre-commit>=4.3.0,<5",
    "deptry==0.23.1",
]
ci = [
    "setuptools>=80.9.0,<81",
]
lint = [
    "ruff==0.12.9",
    "shellcheck-py==0.11.0.1",
]
test = []
docs = []
license = [
    "pandas>=2.3.1,<3",
    "liccheck>=0.9.2,<0.10",
    "licenseheaders==0.8.8",
    "pip>=25.1.1,<26",
]

[tool.uv]
package = false
required-version = ">=0.8.11,<1.0"
default-groups = [
    "dev",
    "ci",
    "lint",
    "test",
    "docs",
    "license",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.deptry]
extend_exclude = [
    "docs",
    "scripts",
]

[tool.deptry.per_rule_ignores]

[tool.liccheck]
authorized_licenses = [
    "bsd",
    "new bsd",
    "bsd license",
    "0BSD",
    "Zero-Clause BSD (0BSD)",
    "3-Clause BSD",
    "BSD-3-Clause",
    "BSD 3-Clause",
    "BSD 3",
    "BSD 2-Clause",
    "BSD-2-Clause",
    "Apache-2.0 AND BSD-2-Clause",
    "Apache-2.0 AND MIT",
    "apache 2",
    "apache",
    "Apache Software",
    "Apache-1.0",
    "Apache-1.1",
    "Apache-2.0",
    "Apache 2.0",
    "Apache License 2.0",
    "Apache License v2.0",
    "Apache License, Version 2.0",
    "MIT",
    "MIT AND BSD-3-Clause",
    "MIT-CMU",
    "CMU License (MIT-CMU)",
    "MIT No Attribution License (MIT-0)",
    "Python Software Foundation",
    "PSF-2.0",
    "ISC",
    "ISC License (ISCL)",
    "historical permission notice and disclaimer (hpnd)",
    "MPL-2.0",
    "Mozilla Public License 2.0 (MPL 2.0)",
    "Artistic",
    "The Unlicense (Unlicense)",
]
unauthorized_licenses = [
    "gpl v3",
    "GPL-3.0-or-later",
    "AGPL-3.0-or-later",
    "AGPL",
    "MPL-1.0",
    "MPL-1.1",
    "LGPL",
    "LGPL-3.0-or-later",
]

[tool.liccheck.authorized_packages]
regex = "*"

[tool.ruff]
target-version = "py313"
extend-include = ["*.ipynb"]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # convention
    "B",  # flake8-bugbear
    "D",  # pydocstyle
    "UP",  # pyupgrade
    "N",  # pep8-naming
    "NPY",  # numpy
    "PD",   # pandas
    "RUF",  # ruff
    "PTH",  # pathlib
    "SIM",  # simplify
    "RET",  # return
    "RSE",  # raise
    "Q",  # quotes
    "G",  # logging-format
    "LOG",  # logging
    "ISC",  # implicit str concat
    "C4",  # comprehensions
    "COM",  # commas
    "TD",  # to-do
    "INT",  # gettext
    "TRY",  # tryceratops
    "TID",  # tidy imports
]
ignore = [
    "C901",  # too complex
    "N805",  # allow naming `self` to first class argument
    "RUF013",  # implicit optional
    "ISC001",  # allow implicit str concat
    "COM812",  # allow missing trailing comma
]

[tool.ruff.lint.per-file-ignores]

[tool.ruff.lint.isort]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.mypy]
plugins = [
  "pydantic.mypy",
]
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
warn_no_return = true
warn_redundant_casts = true
warn_unused_ignores = true
no_implicit_reexport = true
strict_equality = true
extra_checks = true
strict_optional = false
ignore_missing_imports = true
explicit_package_bases = true
